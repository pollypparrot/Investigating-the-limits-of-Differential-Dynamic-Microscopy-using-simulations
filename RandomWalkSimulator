#Holly Chandler
#Fast Image Analysis of Swimming Microbes
#Dissertation code
#27/09/23
import math  #for more complex math equations
import numpy  as np
import matplotlib.pyplot as plt

#create function for random walk simulator
def randomWalkSimulator():
    #initialise coordinate and time lists
    xCoords = []
    yCoords = []
    zCoords = []
    time = []
   
    #initialise first position of sphere
    xCoords.append(0)
    yCoords.append(0)
    zCoords.append(0)
    time.append(0) 
   
    #initalise known variables
    fluidViscosity = 10**(-3)        #unit of Pascal seconds
    sphereRadius = 0.5 * 10**(-6)    #unit of metres
    kb = 1.380649 * 10**(-23)        #unit of Joules per unit Kelvin
    temp = 300                       #unit of Kelvin
    frameRate = 100                  #unit of Hertz
    timePeriod = 1/frameRate         #unit of Time
    
    #calculating the Diffusion Coefficient
    diffusionCoeff = (kb*temp)/(6*math.pi*fluidViscosity*sphereRadius)   #unit of metres squared per second
    diffusionCoeff = 2.3*10**(-9)
    #initialising the parameters of the Gaussian distribution
    
    mean = 0                        #as we can equally go in any direction from the current position
    currentTime = 0
    currentX = 0
    currentY = 0
    currentZ = 0 
    numSteps = 100000                 #change for a longer/shorter analysis
    standardDeviation = math.sqrt(diffusionCoeff*timePeriod)
    changes = []
    
    #calulate each position for each step
    for step in range (0,numSteps):
        currentTime += timePeriod  #add the change in time to find the new time
        time.append(currentTime)   #add to time array
        
        #calculate the change for each coordinate
        xchange = np.random.normal(mean,standardDeviation) 
        ychange = np.random.normal(mean,standardDeviation)
        zchange = np.random.normal(mean,standardDeviation)
        
        #update the current position of the sphere
        currentX += xchange
        currentY += ychange
        currentZ += zchange
        
        #add current position to the arrays
        xCoords.append(currentX)
        yCoords.append(currentY)
        zCoords.append(currentZ)

        """ #check gaussian changes
        changes.append(xchange) """

    #plt.plot(xCoords,yCoords)
    #plt.show()
    #plt.plot(time,xCoords)
    #plt.show()
    #ax = plt.axes(projection='3d')
    #ax.plot3D(xCoords, yCoords, zCoords, 'gray')
    #plt.show()
    """ print(tot)
    count, bins, ignored = plt.hist(changes, 30, density=True)
    plt.plot(bins, 1/(standardDeviation * np.sqrt(2 * np.pi)) *
               np.exp( - (bins - mean)**2 / (2 * standardDeviation**2) ),
                linewidth=2, color='r')
    plt.show() """
randomWalkSimulator()
        
    
    